<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Brushes-->
    <SolidColorBrush x:Key="DefaultBackgroundBrush" Color="#16181E" />

    <SolidColorBrush x:Key="CanvasBrush" Color="#20202C" />

    <SolidColorBrush x:Key="PrimaryBrush" Color="#00AAEB" />

    <SolidColorBrush x:Key="SecondaryBrush" Color="White" />

    <SolidColorBrush x:Key="TertiaryBrush" Color="#E53E46" />

    <SolidColorBrush x:Key="DimGrayBrush" Color="#3E3E46" />

    <!--Styles-->
    <Style
        TargetType="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Background" Value="{StaticResource CanvasBrush}" />
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DimGrayBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TextBlock style-->
    <Style
        TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <!--Windows button style-->
    <Style x:Key="WindowButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}">
                        <Path
                            x:Name="Icon"
                            Data="{Binding Content, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor }}"
                            Fill="{StaticResource SecondaryBrush}"
                            Height="{TemplateBinding FontSize}"
                            Width="{TemplateBinding FontSize}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="Background"
                                Value="{StaticResource DimGrayBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Close button style-->
    <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource WindowButtonsStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}">
                        <Path
                            x:Name="Icon"
                            Data="{Binding Content, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor }}"
                            Fill="{StaticResource SecondaryBrush}"
                            Height="{TemplateBinding FontSize}"
                            Width="{TemplateBinding FontSize}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="Background"
                                Value="{StaticResource TertiaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBox Style-->
    <Style
        x:Key="InputMinimalisticTextBoxStyle"
        TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        BorderBrush="{StaticResource PrimaryBrush}"
                        BorderThickness="0, 0, 0, 2"
                        x:Name="BottomBorder">
                        <Grid>
                            <TextBox
                                Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                x:Name="textSource"
                                Background="Transparent"
                                Foreground="DimGray"
                                BorderThickness="0"
                                Panel.ZIndex="2" />
                            <TextBox
                                Text="{TemplateBinding Tag}"
                                Background="{TemplateBinding Background}"
                                Panel.ZIndex="1"
                                x:Name="textPlaceholder">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}"
                                                         Value="">
                                                <Setter Property="Foreground" Value="DimGray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="textSource"
                                Property="Foreground"
                                Value="LightGray" />
                            <Setter
                                TargetName="BottomBorder"
                                Property="BorderBrush"
                                Value="#0CF6DD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBox Style With Checkbox-->
    <Style
        x:Key="InputMinimalisticTextBoxWithCheckboxStyle"
        TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        BorderBrush="{StaticResource PrimaryBrush}"
                        BorderThickness="0, 0, 0, 2"
                        x:Name="BottomBorder">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*" />
                                <ColumnDefinition
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                Grid.Column="0"
                                Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                x:Name="textSource"
                                Background="Transparent"
                                Foreground="DimGray"
                                BorderThickness="0"
                                Panel.ZIndex="2" />
                            <TextBox
                                Grid.Column="0"
                                Text="{TemplateBinding Tag}"
                                Background="{TemplateBinding Background}"
                                Panel.ZIndex="1"
                                x:Name="textPlaceholder">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}"
                                                         Value="">
                                                <Setter Property="Foreground" Value="DimGray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <CheckBox
                                Style="{StaticResource {x:Type CheckBox}}"
                                Grid.Column="1"
                                x:Name="PasswordCheckBox"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="textSource"
                                Property="Foreground"
                                Value="LightGray" />
                            <Setter
                                TargetName="BottomBorder"
                                Property="BorderBrush"
                                Value="#0CF6DD" />
                            <Setter
                                TargetName="PasswordCheckBox"
                                Property="BorderBrush"
                                Value="#0CF6DD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Left navbar listbox items-->
    <Style x:Key="LeftNavbarListboxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Margin" Value="-1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle
                            x:Name="Indicator"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Stretch"
                            Width="4" />

                        <Path
                            x:Name="Icon"
                            Data="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                            Fill="{StaticResource SecondaryBrush}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter
                                TargetName="Indicator"
                                Property="Fill"
                                Value="{StaticResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Menu items top navigation bar-->
    <Style x:Key="TopNavigationStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="15, 0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="Content" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="FontWeight"
                                Value="SemiBold" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter
                                Property="FontWeight"
                                Value="SemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Icon buttons-->
    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        Background="{TemplateBinding Background}">
                        <Path
                            Fill="{TemplateBinding Foreground}"
                            Data="{TemplateBinding Content}"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="FontWeight"
                                Value="SemiBold" />
                        </Trigger>
                        <EventTrigger
                            RoutedEvent="PreviewMouseDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Path.Height)"
                                            By="1"
                                            Duration="0:0:0.09"
                                            AutoReverse="True" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Path.Width)"
                                            By="1"
                                            Duration="0:0:0.09"
                                            AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Checkbox with icon style-->
    <Style x:Key="IconCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        Background="{TemplateBinding Background}">
                        <Path
                            Fill="{TemplateBinding Foreground}"
                            Data="{TemplateBinding Content}"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="FontWeight"
                                Value="SemiBold" />
                        </Trigger>
                        <EventTrigger
                            RoutedEvent="PreviewMouseDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Path.Height)"
                                            By="1"
                                            Duration="0:0:0.09"
                                            AutoReverse="True" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Path.Width)"
                                            By="1"
                                            Duration="0:0:0.09"
                                            AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Filter checkbox-->
    <Style x:Key="FilterCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource IconCheckBox}">
        <Setter
            Property="Content"
            Value="{StaticResource filter_off_icon}"/>
        <Style.Triggers>
            <Trigger
                Property="CheckBox.IsChecked"
                Value="True">
                <Setter
                    Property="CheckBox.Width"
                    Value="17"/>
                <Setter
                    Property="CheckBox.Height"
                    Value="17"/>
                <Setter
                    Property="CheckBox.Content"
                    Value="{StaticResource filter_on_icon}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Square button-->
    <Style x:Key="SquareButton" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        Background="{TemplateBinding Background}">
                        <TextBlock
                            Text="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="FontWeight"
                                Value="SemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ComboBox Custom Style-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="0"
                Background="{StaticResource DimGrayBrush}"
                BorderBrush="{StaticResource CanvasBrush}"
                BorderThickness="1" />
            <Border
                Grid.Column="0"
                CornerRadius="0"
                Margin="1"
                Background="{StaticResource DimGrayBrush}"
                BorderBrush="{StaticResource CanvasBrush}"
                BorderThickness="0,0,1,0" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Fill="{StaticResource SecondaryBrush}"
                Height="16"
                Width="16"
                Data="{StaticResource down_icon}"
                RenderTransformOrigin="0.5,0.5"
                Stretch="Uniform"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Path.RenderTransform>
                    <TransformGroup>
                        <RotateTransform />
                        <ScaleTransform
                            ScaleX="0.8"
                            ScaleY="0.8" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger
                RoutedEvent="PreviewMouseDown">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="(Path.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                By="-180"
                                Duration="0:0:0.09" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite" IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox 
                            x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"
                            Background="{StaticResource DimGrayBrush}"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource DimGrayBrush}"

                                    BorderThickness="1"
                                    BorderBrush="{StaticResource CanvasBrush}" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource CanvasBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxItem Style -->
    <Style x:Key="ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Margin" Value="5, 0, 0, 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DimGrayBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>