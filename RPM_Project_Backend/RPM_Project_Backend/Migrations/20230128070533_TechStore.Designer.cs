// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPM_Project_Backend.Services.Database;

#nullable disable

namespace RPMProjectBackend.Migrations
{
    [DbContext(typeof(RmpProjectNewContext))]
    [Migration("20230128070533_TechStore")]
    partial class TechStore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RPM_PR_LIB.Address", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdId"));

                    b.Property<string>("AdStreet")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("ad_street")
                        .IsFixedLength();

                    b.Property<int>("AdUId")
                        .HasColumnType("int")
                        .HasColumnName("ad_u_id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("city")
                        .IsFixedLength();

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("country")
                        .IsFixedLength();

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("state")
                        .IsFixedLength();

                    b.HasKey("AdId")
                        .HasName("Addresses_pk");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RPM_PR_LIB.Attribute", b =>
                {
                    b.Property<int>("AtrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("atr_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AtrId"));

                    b.Property<string>("AtrName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("atr_name")
                        .IsFixedLength();

                    b.HasKey("AtrId")
                        .HasName("Attributes_pk");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("RPM_PR_LIB.BankCard", b =>
                {
                    b.Property<int>("BcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bc_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BcId"));

                    b.Property<int>("BcCvc")
                        .HasColumnType("int")
                        .HasColumnName("bc_cvc");

                    b.Property<DateTime>("BcExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("bc_expiration_date");

                    b.Property<string>("BcName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("bc_name")
                        .IsFixedLength();

                    b.Property<int>("BcNumber")
                        .HasColumnType("int")
                        .HasColumnName("bc_number");

                    b.Property<int>("BcPaymentId")
                        .HasColumnType("int")
                        .HasColumnName("bc_payment_id");

                    b.HasKey("BcId")
                        .HasName("Bank_cards_pk");

                    b.HasIndex("BcPaymentId");

                    b.ToTable("Bank_cards", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.CategoriesHaveAttribute", b =>
                {
                    b.Property<int>("ChaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cha_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChaId"));

                    b.Property<int>("ChaAtrId")
                        .HasColumnType("int")
                        .HasColumnName("cha_atr_id");

                    b.Property<int>("ChaCatId")
                        .HasColumnType("int")
                        .HasColumnName("cha_cat_id");

                    b.HasKey("ChaId")
                        .HasName("Categories_have_attributes_pk");

                    b.HasIndex("ChaAtrId");

                    b.HasIndex("ChaCatId");

                    b.ToTable("Categories_have_attributes", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatId"));

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("cat_name")
                        .IsFixedLength();

                    b.Property<int?>("CatParentId")
                        .HasColumnType("int")
                        .HasColumnName("cat_parent_id");

                    b.HasKey("CatId")
                        .HasName("Categories_pk");

                    b.HasIndex("CatParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RPM_PR_LIB.ListsHaveProduct", b =>
                {
                    b.Property<int>("LhpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Lhp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LhpId"));

                    b.Property<int>("LhpPlId")
                        .HasColumnType("int")
                        .HasColumnName("lhp_pl_id");

                    b.Property<int>("LhpProId")
                        .HasColumnType("int")
                        .HasColumnName("lhp_pro_id");

                    b.HasKey("LhpId")
                        .HasName("Lists_have_products_pk");

                    b.HasIndex("LhpPlId");

                    b.HasIndex("LhpProId");

                    b.ToTable("Lists_have_products", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.Order", b =>
                {
                    b.Property<int>("OrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("or_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrId"));

                    b.Property<int>("OrAdId")
                        .HasColumnType("int")
                        .HasColumnName("or_ad_id");

                    b.Property<double>("OrFcost")
                        .HasColumnType("float")
                        .HasColumnName("or_fcost");

                    b.Property<int>("OrNumber")
                        .HasColumnType("int")
                        .HasColumnName("or_number");

                    b.Property<int>("OrSId")
                        .HasColumnType("int")
                        .HasColumnName("or_s_id");

                    b.Property<string>("OrStatus")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("or_status");

                    b.Property<DateTime>("OrTime")
                        .HasColumnType("datetime")
                        .HasColumnName("or_time");

                    b.Property<int>("OrUId")
                        .HasColumnType("int")
                        .HasColumnName("or_u_id");

                    b.HasKey("OrId")
                        .HasName("Orders_pk");

                    b.HasIndex("OrAdId");

                    b.HasIndex("OrSId");

                    b.HasIndex("OrUId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RPM_PR_LIB.OrdersHaveProduct", b =>
                {
                    b.Property<int>("OhpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ohp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OhpId"));

                    b.Property<int?>("OhpOrId")
                        .HasColumnType("int")
                        .HasColumnName("ohp_or_id");

                    b.Property<int>("OhpProId")
                        .HasColumnType("int")
                        .HasColumnName("ohp_pro_id");

                    b.Property<int>("OhpQuantity")
                        .HasColumnType("int")
                        .HasColumnName("ohp_quantity");

                    b.HasKey("OhpId")
                        .HasName("Orders_have_products_pk");

                    b.HasIndex("OhpOrId");

                    b.HasIndex("OhpProId");

                    b.ToTable("Orders_have_products", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.Payment", b =>
                {
                    b.Property<int>("PayId")
                        .HasColumnType("int")
                        .HasColumnName("pay_id");

                    b.Property<string>("PayMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("pay_method")
                        .IsFixedLength();

                    b.Property<int>("PayUserId")
                        .HasColumnType("int")
                        .HasColumnName("pay_user_id");

                    b.HasKey("PayId")
                        .HasName("Payments_pk");

                    b.HasIndex("PayUserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("RPM_PR_LIB.Permission", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PId"));

                    b.Property<string>("PResource")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("char(128)")
                        .HasColumnName("p_resource")
                        .IsFixedLength();

                    b.HasKey("PId")
                        .HasName("permissions_pk");

                    b.HasIndex(new[] { "PResource" }, "permissions_resource_uq")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("RPM_PR_LIB.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pro_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProCatId")
                        .HasColumnType("int")
                        .HasColumnName("pro_cat_id");

                    b.Property<int>("ProCost")
                        .HasColumnType("int")
                        .HasColumnName("pro_cost");

                    b.Property<int?>("ProDiscount")
                        .HasColumnType("int")
                        .HasColumnName("pro_discount");

                    b.Property<string>("ProManufacturer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("char(128)")
                        .HasColumnName("pro_manufacturer")
                        .IsFixedLength();

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("char(128)")
                        .HasColumnName("pro_name")
                        .IsFixedLength();

                    b.Property<string>("ProPhotosPath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("pro_photos_path")
                        .IsFixedLength();

                    b.Property<int>("ProQuantity")
                        .HasColumnType("int")
                        .HasColumnName("pro_quantity");

                    b.Property<double>("ProRating")
                        .HasColumnType("float")
                        .HasColumnName("pro_rating");

                    b.HasKey("Id")
                        .HasName("Products_pk");

                    b.HasIndex("ProCatId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RPM_PR_LIB.ProductList", b =>
                {
                    b.Property<int>("PlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pl_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlId"));

                    b.Property<string>("PlName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("pl_name");

                    b.Property<int>("PlUId")
                        .HasColumnType("int")
                        .HasColumnName("pl_u_id");

                    b.HasKey("PlId")
                        .HasName("Product_lists_pk");

                    b.HasIndex("PlUId");

                    b.ToTable("Product_lists", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.ProductsHaveAttribute", b =>
                {
                    b.Property<int>("PhaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pha_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhaId"));

                    b.Property<int>("PhaAtrId")
                        .HasColumnType("int")
                        .HasColumnName("pha_atr_id");

                    b.Property<int>("PhaProId")
                        .HasColumnType("int")
                        .HasColumnName("pha_pro_id");

                    b.Property<string>("PhaValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("pha_value");

                    b.HasKey("PhaId")
                        .HasName("Products_have_attributes_pk");

                    b.HasIndex("PhaAtrId");

                    b.HasIndex("PhaProId");

                    b.ToTable("Products_have_attributes", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.Qiwi", b =>
                {
                    b.Property<int>("QiwiId")
                        .HasColumnType("int")
                        .HasColumnName("qiwi_id");

                    b.Property<int?>("QiwiNumber")
                        .HasColumnType("int")
                        .HasColumnName("qiwi_number");

                    b.Property<int?>("QiwiPayId")
                        .HasColumnType("int")
                        .HasColumnName("qiwi_pay_id");

                    b.HasKey("QiwiId")
                        .HasName("Qiwi_pk");

                    b.HasIndex("QiwiPayId");

                    b.ToTable("Qiwi", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.Review", b =>
                {
                    b.Property<int>("RewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rew_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewId"));

                    b.Property<int>("RewProId")
                        .HasColumnType("int")
                        .HasColumnName("rew_pro_id");

                    b.Property<string>("RewText")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("rew_text");

                    b.Property<int>("RewUId")
                        .HasColumnType("int")
                        .HasColumnName("rew_u_id");

                    b.HasKey("RewId")
                        .HasName("Reviews_pk");

                    b.HasIndex("RewProId");

                    b.HasIndex("RewUId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RPM_PR_LIB.Role", b =>
                {
                    b.Property<int>("RId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("r_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RId"));

                    b.Property<string>("RName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("r_name")
                        .IsFixedLength();

                    b.HasKey("RId")
                        .HasName("Roles_pk");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RPM_PR_LIB.RoleHasPermission", b =>
                {
                    b.Property<int>("RhpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rhp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RhpId"));

                    b.Property<int>("RhpPermissionId")
                        .HasColumnType("int")
                        .HasColumnName("rhp_permission_id");

                    b.Property<int>("RhpRoleId")
                        .HasColumnType("int")
                        .HasColumnName("rhp_role_id");

                    b.HasKey("RhpId")
                        .HasName("Role_has_permissions_pk");

                    b.HasIndex("RhpPermissionId");

                    b.HasIndex("RhpRoleId");

                    b.ToTable("Role_has_permissions", (string)null);
                });

            modelBuilder.Entity("RPM_PR_LIB.Seller", b =>
                {
                    b.Property<int>("SuId")
                        .HasColumnType("int")
                        .HasColumnName("su_id");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("s_name");

                    b.HasKey("SuId")
                        .HasName("Sellers_pk");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("RPM_PR_LIB.Transaction", b =>
                {
                    b.Property<int>("TrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tr_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrId"));

                    b.Property<int>("TrOrId")
                        .HasColumnType("int")
                        .HasColumnName("tr_or_id");

                    b.Property<int>("TrPayId")
                        .HasColumnType("int")
                        .HasColumnName("tr_pay_id");

                    b.Property<DateTime>("TrTime")
                        .HasColumnType("datetime")
                        .HasColumnName("tr_time");

                    b.HasKey("TrId")
                        .HasName("transactions_pk");

                    b.HasIndex("TrOrId");

                    b.HasIndex("TrPayId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("RPM_PR_LIB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("u_email")
                        .IsFixedLength();

                    b.Property<string>("ULogin")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("u_login")
                        .IsFixedLength();

                    b.Property<string>("UPassword")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("char(256)")
                        .HasColumnName("u_password")
                        .IsFixedLength();

                    b.Property<int>("URoleId")
                        .HasColumnType("int")
                        .HasColumnName("u_role_id");

                    b.HasKey("Id")
                        .HasName("Users_pk");

                    b.HasIndex("URoleId");

                    b.HasIndex(new[] { "UEmail" }, "Users_email_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "ULogin" }, "Users_login_unique")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RPM_PR_LIB.BankCard", b =>
                {
                    b.HasOne("RPM_PR_LIB.Payment", "BcPayment")
                        .WithMany("BankCards")
                        .HasForeignKey("BcPaymentId")
                        .IsRequired()
                        .HasConstraintName("Bank_cards_Payments_pay_id_fk");

                    b.Navigation("BcPayment");
                });

            modelBuilder.Entity("RPM_PR_LIB.CategoriesHaveAttribute", b =>
                {
                    b.HasOne("RPM_PR_LIB.Attribute", "ChaAtr")
                        .WithMany("CategoriesHaveAttributes")
                        .HasForeignKey("ChaAtrId")
                        .IsRequired()
                        .HasConstraintName("Categories_have_attributes_Attributes_atr_id_fk");

                    b.HasOne("RPM_PR_LIB.Category", "ChaCat")
                        .WithMany("CategoriesHaveAttributes")
                        .HasForeignKey("ChaCatId")
                        .IsRequired()
                        .HasConstraintName("Categories_have_attributes_Categories_cat_id_fk");

                    b.Navigation("ChaAtr");

                    b.Navigation("ChaCat");
                });

            modelBuilder.Entity("RPM_PR_LIB.Category", b =>
                {
                    b.HasOne("RPM_PR_LIB.Category", "CatParent")
                        .WithMany("InverseCatParent")
                        .HasForeignKey("CatParentId")
                        .HasConstraintName("Categories_Categories_cat_id_fk");

                    b.Navigation("CatParent");
                });

            modelBuilder.Entity("RPM_PR_LIB.ListsHaveProduct", b =>
                {
                    b.HasOne("RPM_PR_LIB.ProductList", "LhpPl")
                        .WithMany("ListsHaveProducts")
                        .HasForeignKey("LhpPlId")
                        .IsRequired()
                        .HasConstraintName("Lists_have_products_Product_lists_pl_id_fk");

                    b.HasOne("RPM_PR_LIB.Product", "LhpPro")
                        .WithMany("ListsHaveProducts")
                        .HasForeignKey("LhpProId")
                        .IsRequired()
                        .HasConstraintName("Lists_have_products_Products_pro_id_fk");

                    b.Navigation("LhpPl");

                    b.Navigation("LhpPro");
                });

            modelBuilder.Entity("RPM_PR_LIB.Order", b =>
                {
                    b.HasOne("RPM_PR_LIB.Address", "OrAd")
                        .WithMany("Orders")
                        .HasForeignKey("OrAdId")
                        .IsRequired()
                        .HasConstraintName("Orders_Addresses_ad_id_fk");

                    b.HasOne("RPM_PR_LIB.Seller", "OrS")
                        .WithMany("Orders")
                        .HasForeignKey("OrSId")
                        .IsRequired()
                        .HasConstraintName("Orders_Sellers_su_id_fk");

                    b.HasOne("RPM_PR_LIB.User", "OrU")
                        .WithMany("Orders")
                        .HasForeignKey("OrUId")
                        .IsRequired()
                        .HasConstraintName("Orders_Users_u_id_fk");

                    b.Navigation("OrAd");

                    b.Navigation("OrS");

                    b.Navigation("OrU");
                });

            modelBuilder.Entity("RPM_PR_LIB.OrdersHaveProduct", b =>
                {
                    b.HasOne("RPM_PR_LIB.Order", "OhpOr")
                        .WithMany("OrdersHaveProducts")
                        .HasForeignKey("OhpOrId")
                        .HasConstraintName("Orders_have_products_Orders_or_id_fk");

                    b.HasOne("RPM_PR_LIB.Product", "OhpPro")
                        .WithMany("OrdersHaveProducts")
                        .HasForeignKey("OhpProId")
                        .IsRequired()
                        .HasConstraintName("Orders_have_products_Products_pro_id_fk");

                    b.Navigation("OhpOr");

                    b.Navigation("OhpPro");
                });

            modelBuilder.Entity("RPM_PR_LIB.Payment", b =>
                {
                    b.HasOne("RPM_PR_LIB.User", "PayUser")
                        .WithMany("Payments")
                        .HasForeignKey("PayUserId")
                        .IsRequired()
                        .HasConstraintName("Payments_Users_u_id_fk");

                    b.Navigation("PayUser");
                });

            modelBuilder.Entity("RPM_PR_LIB.Product", b =>
                {
                    b.HasOne("RPM_PR_LIB.Category", "ProCat")
                        .WithMany("Products")
                        .HasForeignKey("ProCatId")
                        .IsRequired()
                        .HasConstraintName("Products_Categories_cat_id_fk");

                    b.Navigation("ProCat");
                });

            modelBuilder.Entity("RPM_PR_LIB.ProductList", b =>
                {
                    b.HasOne("RPM_PR_LIB.User", "PlU")
                        .WithMany("ProductLists")
                        .HasForeignKey("PlUId")
                        .IsRequired()
                        .HasConstraintName("Product_lists_Users_u_id_fk");

                    b.Navigation("PlU");
                });

            modelBuilder.Entity("RPM_PR_LIB.ProductsHaveAttribute", b =>
                {
                    b.HasOne("RPM_PR_LIB.Attribute", "PhaAtr")
                        .WithMany("ProductsHaveAttributes")
                        .HasForeignKey("PhaAtrId")
                        .IsRequired()
                        .HasConstraintName("Products_have_attributes_Attributes_atr_id_fk");

                    b.HasOne("RPM_PR_LIB.Product", "PhaPro")
                        .WithMany("ProductsHaveAttributes")
                        .HasForeignKey("PhaProId")
                        .IsRequired()
                        .HasConstraintName("Products_have_attributes_Products_pro_id_fk");

                    b.Navigation("PhaAtr");

                    b.Navigation("PhaPro");
                });

            modelBuilder.Entity("RPM_PR_LIB.Qiwi", b =>
                {
                    b.HasOne("RPM_PR_LIB.Payment", "QiwiPay")
                        .WithMany("Qiwis")
                        .HasForeignKey("QiwiPayId")
                        .HasConstraintName("Qiwi_Payments_pay_id_fk");

                    b.Navigation("QiwiPay");
                });

            modelBuilder.Entity("RPM_PR_LIB.Review", b =>
                {
                    b.HasOne("RPM_PR_LIB.Product", "RewPro")
                        .WithMany("Reviews")
                        .HasForeignKey("RewProId")
                        .IsRequired()
                        .HasConstraintName("Reviews_Products_pro_id_fk");

                    b.HasOne("RPM_PR_LIB.User", "RewU")
                        .WithMany("Reviews")
                        .HasForeignKey("RewUId")
                        .IsRequired()
                        .HasConstraintName("Reviews_Users_u_id_fk");

                    b.Navigation("RewPro");

                    b.Navigation("RewU");
                });

            modelBuilder.Entity("RPM_PR_LIB.RoleHasPermission", b =>
                {
                    b.HasOne("RPM_PR_LIB.Permission", "RhpPermission")
                        .WithMany("RoleHasPermissions")
                        .HasForeignKey("RhpPermissionId")
                        .IsRequired()
                        .HasConstraintName("Role_has_permissions_Permissions_p_id_fk");

                    b.HasOne("RPM_PR_LIB.Role", "RhpRole")
                        .WithMany("RoleHasPermissions")
                        .HasForeignKey("RhpRoleId")
                        .IsRequired()
                        .HasConstraintName("Role_has_permissions_Roles_r_id_fk");

                    b.Navigation("RhpPermission");

                    b.Navigation("RhpRole");
                });

            modelBuilder.Entity("RPM_PR_LIB.Seller", b =>
                {
                    b.HasOne("RPM_PR_LIB.User", "Su")
                        .WithOne("Seller")
                        .HasForeignKey("RPM_PR_LIB.Seller", "SuId")
                        .IsRequired()
                        .HasConstraintName("Sellers_Users_u_id_fk");

                    b.Navigation("Su");
                });

            modelBuilder.Entity("RPM_PR_LIB.Transaction", b =>
                {
                    b.HasOne("RPM_PR_LIB.Order", "TrOr")
                        .WithMany("Transactions")
                        .HasForeignKey("TrOrId")
                        .IsRequired()
                        .HasConstraintName("Transactions_Orders_or_id_fk");

                    b.HasOne("RPM_PR_LIB.Payment", "TrPay")
                        .WithMany("Transactions")
                        .HasForeignKey("TrPayId")
                        .IsRequired()
                        .HasConstraintName("transactions_Payments_pay_id_fk");

                    b.Navigation("TrOr");

                    b.Navigation("TrPay");
                });

            modelBuilder.Entity("RPM_PR_LIB.User", b =>
                {
                    b.HasOne("RPM_PR_LIB.Role", "URole")
                        .WithMany("Users")
                        .HasForeignKey("URoleId")
                        .IsRequired()
                        .HasConstraintName("Users_Roles_r_id_fk");

                    b.Navigation("URole");
                });

            modelBuilder.Entity("RPM_PR_LIB.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RPM_PR_LIB.Attribute", b =>
                {
                    b.Navigation("CategoriesHaveAttributes");

                    b.Navigation("ProductsHaveAttributes");
                });

            modelBuilder.Entity("RPM_PR_LIB.Category", b =>
                {
                    b.Navigation("CategoriesHaveAttributes");

                    b.Navigation("InverseCatParent");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("RPM_PR_LIB.Order", b =>
                {
                    b.Navigation("OrdersHaveProducts");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RPM_PR_LIB.Payment", b =>
                {
                    b.Navigation("BankCards");

                    b.Navigation("Qiwis");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RPM_PR_LIB.Permission", b =>
                {
                    b.Navigation("RoleHasPermissions");
                });

            modelBuilder.Entity("RPM_PR_LIB.Product", b =>
                {
                    b.Navigation("ListsHaveProducts");

                    b.Navigation("OrdersHaveProducts");

                    b.Navigation("ProductsHaveAttributes");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RPM_PR_LIB.ProductList", b =>
                {
                    b.Navigation("ListsHaveProducts");
                });

            modelBuilder.Entity("RPM_PR_LIB.Role", b =>
                {
                    b.Navigation("RoleHasPermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RPM_PR_LIB.Seller", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RPM_PR_LIB.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("ProductLists");

                    b.Navigation("Reviews");

                    b.Navigation("Seller");
                });
#pragma warning restore 612, 618
        }
    }
}
